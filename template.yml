AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: >
  The resources for providing a service for listing users and roles.
  It includes a table containing users and roles and lambda functions for accessing the data.

Parameters:
  CognitoAuthorizerArn:
    Type: String
  UsersAndRolesTableName:
    Type: String
  ApiKeySecretArn:
    Type: String
  StageName:
    Type: String
  InternalApiBasePath:
    Type: String
  ExternalApiBasePath:
    Type: String
  CustomDomain:
    Type: String



Globals:
  Api:
    Cors:
      AllowMethods: '''POST, PUT, GET,OPTIONS'''
      AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
      AllowOrigin: '''*'''

Resources:

  ExternalApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL

  UserRoleMappings:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref UsersAndRolesTableName
      AttributeDefinitions:
        - AttributeName: PrimaryKeyHashKey
          AttributeType: S
        - AttributeName: PrimaryKeyRangeKey
          AttributeType: S
        - AttributeName: SecondaryIndex1HashKey
          AttributeType: S
        - AttributeName: SecondaryIndex1RangeKey
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: PrimaryKeyHashKey
          KeyType: HASH
        - AttributeName: PrimaryKeyRangeKey
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: SearchUsersByInstitution
          KeySchema:
            - AttributeName: SecondaryIndex1HashKey
              KeyType: HASH
            - AttributeName: SecondaryIndex1RangeKey
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  AddRoleHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.nva.handlers.AddRoleHandler::handleRequest
      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          USERS_AND_ROLES_TABLE:  !Ref UsersAndRolesTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersAndRolesTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /roles
            Method: post
            RestApiId: !Ref ExternalApi

  GetRoleHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.nva.handlers.GetRoleHandler::handleRequest
      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          USERS_AND_ROLES_TABLE:  !Ref UsersAndRolesTableName
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersAndRolesTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /roles/{role}
            Method: get
            RestApiId: !Ref ExternalApi
  AddUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.nva.handlers.AddUserHandler::handleRequest
      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          USERS_AND_ROLES_TABLE:  !Ref UsersAndRolesTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersAndRolesTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users
            Method: post
            RestApiId: !Ref ExternalApi

  GetUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.nva.handlers.GetUserHandler::handleRequest
      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          USERS_AND_ROLES_TABLE:  !Ref UsersAndRolesTableName
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersAndRolesTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users/{username}
            Method: get
            RestApiId: !Ref ExternalApi
  UpdateUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.nva.handlers.UpdateUserHandler::handleRequest
      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          USERS_AND_ROLES_TABLE:  !Ref UsersAndRolesTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersAndRolesTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users/{username}
            Method: put
            RestApiId: !Ref ExternalApi
  ListByInstitutionHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.nva.handlers.ListByInstitutionHandler::handleRequest
      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
          USERS_AND_ROLES_TABLE:  !Ref UsersAndRolesTableName
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UsersAndRolesTableName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /institutions/{institution}/users
            Method: get
            RestApiId: !Ref ExternalApi